plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar{
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    //spring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // mongo
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // influx
    runtimeOnly 'io.micrometer:micrometer-registry-influx'

    // monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.20.0'

    // swagger
    annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0'
    implementation 'com.github.therapi:therapi-runtime-javadoc:0.15.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // json
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // error log
    implementation 'org.apache.commons:commons-lang3:3.14.0'

    // xml bind
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    String activeProfile = project.properties.get('spring.profiles.active')
    println "Actived profile: $activeProfile"
    systemProperty "spring.profiles.active", activeProfile

    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}